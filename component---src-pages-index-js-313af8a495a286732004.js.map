{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/helmet.js","webpack:///./src/components/navbar.js","webpack:///./src/components/header.js","webpack:///./src/components/titleblock.js","webpack:///./src/components/timeline.js","webpack:///./src/components/skills.js","webpack:///./src/components/about.js","webpack:///./src/components/contacts.js","webpack:///./src/components/midsection.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","IndexPage","a","createElement","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","data","query","render","children","object","func","helmet","gatsby_browser_entry_StaticQuery","Helmet_default","name","content","site","siteMetadata","description","keywords","title","lang","itemprop","author","imageUrl","_2621967516","Navbar","className","href","id","index_esm","size","Header","siteTitle","navbar","TitleBlock","IconedLink","TimelineItem","job","right","from","to","employer","timeline_IconedLink","link","Timeline","components_titleblock","allDataYaml","nodes","resume","experience","map","value","index","timeline_TimelineItem","_1503407143","PLTitle","stars","i","total","color","score","push","text","Stars","SkillItem","skills_PLTitle","skill","skills_Stars","related","Skills","skills","tech","skills_SkillItem","_1194589811","About","about","_371956468","Contacts","contacts","github","email","linkedin","_1290394461","Midsection","components_timeline","components_skills","Footer","_453950743","Layout","header","midsection","footer"],"mappings":"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","file":"component---src-pages-index-js-313af8a495a286732004.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst IndexPage = () => <Layout />\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n                query helmetQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            author\n                            imageUrl\n                            description\n                            keywords\n                        }\n                    }\n                }\n            `}\n    render={data => (\n      <Helmet>\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\"\n        />\n        <meta name=\"description\" content={data.site.siteMetadata.description} />\n        <meta name=\"keywords\" content={data.site.siteMetadata.keywords} />\n        <title>{data.site.siteMetadata.title}</title>\n        <html lang=\"en\" />\n        {/* Google / Search Engine Meta Tags */}\n        <meta itemprop=\"name\" content={data.site.siteMetadata.author} /> />\n        <meta\n          itemprop=\"description\"\n          content={data.site.siteMetadata.description}\n        />\n        <meta itemprop=\"image\" content={data.site.siteMetadata.imageUrl} /> />\n      </Helmet>\n    )}\n  />\n)\n","import React from 'react'\nimport { FaFilePdf } from 'react-icons/fa'\nimport './style.scss'\n\nconst Navbar = () => (\n  <div className=\"hero-head is-hidden-mobile\">\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <a\n            className=\"navbar-item\"\n            href=\"https://github.com/amandeepmittal/gatsby-bulma-quickstart\"\n          >\n          </a>\n        </div>\n        <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <span className=\"navbar-item\">\n              <a className=\"button button-download\"\n                href=\"resume.pdf\" >\n                <span className=\"icon\">\n                  <FaFilePdf size=\"fa-2x\"/>\n                </span>\n                <span>Download resume</span>\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n    </nav>\n  </div>\n)\n\nexport default Navbar\n","import React from 'react'\nimport './style.scss'\n\nimport Navbar from './navbar'\n\nconst Header = ({ siteTitle }) => (\n  <section className=\"hero is-fullheight\">\n    <Navbar />\n    <div className=\"hero-body\">\n      <div className=\"container center\">\n        <article className=\"media\">\n          <div className=\"media-content\">\n            <div className=\"content no-scroll\">\n              <h1 className=\"is-uppercase is-size-1 has-text-white\">\n                                Dmitriy Kuzmin\n              </h1>\n              <p className=\"subtitle has-text-white is-size-8\">\n                                Software Engineer\n              </p>\n            </div>\n          </div>\n        </article>\n      </div>\n    </div>\n  </section>\n)\n\nexport default Header\n","import React from 'react'\nimport './style.scss'\nimport './titleblock.scss'\n\nconst TitleBlock = props => (\n  <div className=\"a-block\">\n    <div className=\"a-content\">{props.children}</div>\n  </div>\n)\nexport default TitleBlock\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './timeline.scss'\nimport './style.scss'\nimport TitleBlock from './titleblock'\nimport { FaStar, FaExternalLinkSquareAlt } from 'react-icons/fa'\n\nconst IconedLink = props => (\n  <a className=\"tl-link\" href={props.href}><span>{props.children}</span><FaExternalLinkSquareAlt className=\"tl-link-icon\"/></a>\n)\n\nconst TimelineItem = ({ job, right }) => (\n  <div className=\"timeline-item\">\n    <div className=\"timeline-icon\">\n      <FaStar className=\"tl-fa\"/>\n    </div>\n    <div className={'timeline-content' + (right ? ' right' : '')}>\n      <div className=\"tl-title\">\n        <div className=\"tl-job-title\">{job.title}</div>\n        <div className=\"tl-time\">{job.from} - {job.to}</div>\n        { job.employer && <div><IconedLink href={job.employer.link}>{job.employer.name}</IconedLink></div> }\n      </div>\n      <p>{job.description}</p>\n    </div>\n  </div>\n)\n\nconst Timeline = () => (\n  <StaticQuery\n    query={graphql`\n        query {\n          allDataYaml {\n            nodes {\n              resume {\n                experience {\n                  title\n                  description\n                  from\n                  to\n                  employer {\n                    name\n                    link\n                  }\n                }\n              }\n            }\n          }\n        }\n    `}\n\n    render={ data =>\n      <div>\n        <TitleBlock>\n          <h1 className=\"project-name title is-2\">Career timeline</h1>\n        </TitleBlock>\n        <div className=\"container\">\n          <section className=\"section\">\n            <div id=\"timeline\">\n              {\n                data.allDataYaml.nodes[0].resume.experience\n                  .map((value, index) =>\n                    <TimelineItem job={value} right={index % 2 === 1}/>)\n              }\n            </div>\n          </section>\n        </div></div>\n    }\n  />\n)\n\nexport default Timeline\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { FaStar } from 'react-icons/fa'\nimport './style.scss'\nimport './skills.scss'\nimport TitleBlock from './titleblock'\n\nconst PLTitle = props => {\n  let stars = []\n  for (let i = 0; i < props.total; i++) {\n    let color = i < props.score ? 'star' : 'star-inactive'\n    stars.push(<span className=\"icon\">\n      <FaStar className={color} size=\"fa-2x\"/>\n    </span>\n    )\n  }\n  return (\n    <h4 className=\"title is-4 nowrap has-text-centered\">\n      <span>{props.text}</span>{props.children}\n    </h4>\n  )\n}\n\nconst Stars = props => {\n  let stars = []\n  for (let i = 0; i < props.total; i++) {\n    let color = i < props.score ? 'star' : 'star-inactive'\n    stars.push(<span className=\"icon\">\n      <FaStar className={color} size=\"fa-2x\"/>\n    </span>\n    )\n  }\n  return (\n    <span className=\"stars\">{stars}</span>\n  )\n}\n\nconst SkillItem = props => (\n  <div className=\"content column skill-col is-half\">\n    <PLTitle text={props.skill.name}>\n      { props.skill.score && <Stars total=\"5\" score={props.skill.score}/>}\n    </PLTitle>\n    { props.skill.related\n      ? <div className=\"tags are-large tags-centered\">\n        {props.skill.related.map((value, i) =>\n          <span className=\"tag skill-tag\">{value.name}</span>)}\n      </div>\n      : null\n    }\n  </div>\n)\n\nconst Skills = () => (\n  <StaticQuery\n    query={graphql`\n        query {\n          allDataYaml {\n            nodes {\n              resume {\n                skills {\n                  tech {\n                    name\n                    score\n                    related {\n                      name\n                      link\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n    `}\n\n    render={ data =>\n      <div>\n        <TitleBlock>\n          <h2 className=\"project-name title is-2\">Skills</h2>\n        </TitleBlock>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns is-multiline content\">\n              {\n                data.allDataYaml\n                  .nodes[0].resume\n                  .skills.tech\n                  .map((value, i) => <SkillItem skill={value}/>)\n              }\n            </div>\n          </div>\n        </section>\n      </div>\n    }\n  />\n)\n\nexport default Skills\n","import React from 'react'\nimport './style.scss'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst About = () => (\n  <StaticQuery\n    query={graphql`\n        query {\n          allDataYaml {\n            nodes {\n              resume {\n                about\n              }\n            }\n          }\n        }\n    `}\n    render= {data =>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"content is-medium about\">\n            <h2>About</h2>\n            <p>{ data.allDataYaml.nodes[0].resume.about }</p>\n          </div>\n        </div>\n      </section>\n    }\n  />\n)\n\nexport default About\n","import React from 'react'\nimport './style.scss'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { FaGithub, FaLinkedin, FaEnvelope } from 'react-icons/fa'\n\nconst Contacts = () => (\n  <StaticQuery\n    query={graphql`\n        query {\n          allDataYaml {\n            nodes {\n              resume {\n                contacts {\n                  email\n                  linkedin\n                  github\n                }\n              }\n            }\n          }\n        }\n    `}\n    render = { data =>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"content is-medium\">\n            <div className=\"columns\">\n              <div className=\"column has-text-centered\">\n                <span className=\"icon\">\n                  <a href={ 'https://' + data.allDataYaml.nodes[0].resume.contacts.github}>\n                    <FaGithub size=\"200%\" color=\"white\" />\n                  </a>\n                </span>\n              </div>\n              <div className=\"column has-text-centered\">\n                <span className=\"icon\">\n                  <a href={ 'mailto:' + data.allDataYaml.nodes[0].resume.contacts.email}>\n                    <FaEnvelope size=\"200%\" color=\"white\" />\n                  </a>\n                </span>\n              </div>\n              <div className=\"column has-text-centered\">\n                <span className=\"icon\">\n                  <a href={ 'https://' + data.allDataYaml.nodes[0].resume.contacts.linkedin}>\n                    <FaLinkedin size=\"200%\" color=\"white\" />\n                  </a>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    }\n  />\n)\n\nexport default Contacts\n","import React from 'react'\nimport './style.scss'\nimport Timeline from './timeline'\nimport Skills from './skills'\nimport About from './about'\nimport Contacts from './contacts'\n\nconst Midsection = () => (\n  <div className=\"has-background\">\n    <About/>\n    <Contacts/>\n    <Timeline/>\n    <Skills/>\n  </div>\n)\n\nexport default Midsection\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './style.scss'\n\nconst Footer = () => (\n  <StaticQuery\n    query={graphql`\n            query SocialQuery {\n                site {\n                    siteMetadata {\n                            github\n                    }\n                }\n            }\n            `}\n    render={data => (\n      <footer className=\"footer center has-background-black\">\n        <div className=\"content has-text-centered\">\n          <p className=\"is-size-6\">\n            <div>Made with Gatsby, Bulma, StackOverflow</div>\n          </p>\n          <a className=\"button is-link is-inverted is-outlined\" href={data.site.siteMetadata.github}>View this site on GitHub</a>\n        </div>\n      </footer>\n    )}\n  />\n)\n\nexport default Footer\n","import React from 'react'\n\nimport './style.scss'\nimport Helmet from './helmet'\nimport Header from './header'\nimport Midsection from './midsection'\nimport Footer from './footer'\n\nconst Layout = ({ children }) => (\n  <div className=\"prlx-header\">\n    <Helmet />\n    <Header />\n    <Midsection />\n    <Footer />\n  </div>\n)\n\nexport default Layout\n"],"sourceRoot":""}