{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/helmet.js","webpack:///./src/components/navbar.js","webpack:///./src/components/header.js","webpack:///./src/components/timeline.js","webpack:///./src/components/midsection.js","webpack:///./src/components/emoji.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","IndexPage","a","createElement","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","data","query","render","children","object","func","helmet","gatsby_browser_entry_StaticQuery","Helmet_default","name","content","site","siteMetadata","description","keywords","title","lang","itemprop","author","imageUrl","_2621967516","Navbar","className","href","id","index_esm","size","Header","siteTitle","navbar","TimelineItem","version","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","fill","d","right","ysection","allDataYaml","nodes","resume","Timeline","experience","concat","education","map","value","index","timeline_TimelineItem","_2424823938","Midsection","components_timeline","emoji","styles","fontSize","style","role","aria-label","Footer","github","color","_453950743","Layout","header","midsection","footer"],"mappings":"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","file":"component---src-pages-index-js-40fe9090f2ef916902e4.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst IndexPage = () => <Layout />\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n                query helmetQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            author\n                            imageUrl\n                            description\n                            keywords\n                        }\n                    }\n                }\n            `}\n    render={data => (\n      <Helmet>\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\"\n        />\n        <meta name=\"description\" content={data.site.siteMetadata.description} />\n        <meta name=\"keywords\" content={data.site.siteMetadata.keywords} />\n        <title>{data.site.siteMetadata.title}</title>\n        <html lang=\"en\" />\n        {/* Google / Search Engine Meta Tags */}\n        <meta itemprop=\"name\" content={data.site.siteMetadata.author} /> />\n        <meta\n          itemprop=\"description\"\n          content={data.site.siteMetadata.description}\n        />\n        <meta itemprop=\"image\" content={data.site.siteMetadata.imageUrl} /> />\n      </Helmet>\n    )}\n  />\n)\n","import React from 'react'\nimport { FaFilePdf } from 'react-icons/fa'\n\nimport './style.scss'\n\nconst Navbar = () => (\n  <div className=\"hero-head is-hidden-mobile\">\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <a\n            className=\"navbar-item\"\n            href=\"https://github.com/amandeepmittal/gatsby-bulma-quickstart\"\n          >\n          </a>\n        </div>\n        <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <span className=\"navbar-item\">\n              <a className=\"button\"\n                href=\"resume.pdf\" >\n                <span className=\"icon\">\n                  <FaFilePdf size=\"fa-2x\"/>\n                </span>\n                <span>Download resume</span>\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n    </nav>\n  </div>\n)\n\nexport default Navbar\n","import React from 'react'\nimport './style.scss'\n\nimport Navbar from './navbar'\n\nconst Header = ({ siteTitle }) => (\n  <section className=\"hero gradientBg is-fullheight-with-navbar\">\n    <Navbar />\n    <div className=\"hero-body\">\n      <div className=\"container center\">\n        <article className=\"media\">\n          <div className=\"media-content\">\n            <div className=\"content\">\n              <h1 className=\"is-uppercase is-size-1 has-text-white\">\n                                Dmitriy Kuzmin\n              </h1>\n              <p className=\"subtitle has-text-white is-size-8\">\n                                Software Engineer\n              </p>\n            </div>\n          </div>\n        </article>\n      </div>\n    </div>\n  </section>\n)\n\nexport default Header\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './timeline.scss'\nimport './style.scss'\n\nconst TimelineItem = props => (\n  <div className=\"timeline-item\">\n    <div className=\"timeline-icon\">\n      <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"21px\" height=\"20px\" viewBox=\"0 0 21 20\" enableBackground=\"new 0 0 21 20\" xmlSpace=\"preserve\">\n        <path fill=\"#FFFFFF\" d=\"M19.998,6.766l-5.759-0.544c-0.362-0.032-0.676-0.264-0.822-0.61l-2.064-4.999 c-0.329-0.825-1.5-0.825-1.83,0L7.476,5.611c-0.132,0.346-0.462,0.578-0.824,0.61L0.894,6.766C0.035,6.848-0.312,7.921,0.333,8.499 l4.338,3.811c0.279,0.246,0.395,0.609,0.314,0.975l-1.304,5.345c-0.199,0.842,0.708,1.534,1.468,1.089l4.801-2.822 c0.313-0.181,0.695-0.181,1.006,0l4.803,2.822c0.759,0.445,1.666-0.23,1.468-1.089l-1.288-5.345 c-0.081-0.365,0.035-0.729,0.313-0.975l4.34-3.811C21.219,7.921,20.855,6.848,19.998,6.766z\" />\n      </svg>\n    </div>\n    <div className={'timeline-content' + (props.right ? ' right' : '')}>\n      <h2>{props.title}</h2>\n      <p>{props.description}</p>\n    </div>\n  </div>\n)\n\nconst ysection = (data) => { return data.allDataYaml.nodes[0].resume }\n\nconst Timeline = () => (\n  <StaticQuery\n    query={graphql`\n        query {\n          allDataYaml {\n            nodes {\n              resume {\n                experience {\n                  title\n                  description\n                }\n                education {\n                  title\n                  description\n                }\n              }\n            }\n          }\n        }\n    `}\n\n    render={ data =>\n      <div className=\"container\">\n        <h1 className=\"project-name\">Career timeline</h1>\n        <div id=\"timeline\">\n          {\n            ysection(data).experience.concat(ysection(data).education).map((value, index) =>\n              <TimelineItem\n                title={value.title}\n                description={value.description}\n                right={index % 2 === 1} />)}\n        </div>\n      </div>\n    }\n  />\n)\n\nexport default Timeline\n","import React from 'react'\nimport './style.scss'\nimport Timeline from './timeline'\n\nconst Midsection = () => (\n  <div>\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"content\">\n          <h2>About me</h2>\n          <p>\n            Software engineer with 2+ years of work experience.\n            Developing solutions in various fields from telecommunications\n            management and marketing to cutting-edge researches of blockchain technology.\n            Constantly investing in education and learning new tools for making better products.\n            Seeking for further gaining and sharing experience as a software developer.\n          </p>\n        </div>\n        <Timeline/>\n      </div>\n    </section>\n  </div>\n)\n\nexport default Midsection\n","import React from 'react'\n\nexport default props => {\n  const styles = {\n    fontSize: props.size + 'rem'\n  }\n\n  return (\n    <span style={styles} role=\"img\" aria-label=\"emoji\">\n      {props.emoji}\n    </span>\n  )\n}\n","import React from 'react'\nimport { FaGithub } from 'react-icons/fa'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './style.scss'\nimport Emoji from './emoji'\n\nconst Footer = () => (\n  <StaticQuery\n    query={graphql`\n            query SocialQuery {\n                site {\n                    siteMetadata {\n                            github\n                    }\n                }\n            }\n            `}\n    render={data => (\n      <footer className=\"footer center has-background-light\">\n        <div className=\"content has-text-centered\">\n          <p className=\"is-size-4\">\n        This website was handcrafted with plenty of{' '}\n            <Emoji emoji=\"🍺\" />\n          </p>\n          <article className=\"media center\">\n            <span className=\"icon\">\n              <a href={data.site.siteMetadata.github}>\n                <FaGithub size=\"fa-2x\" color=\"black\" />\n              </a>\n            </span>\n            &nbsp;\n          </article>\n            &nbsp;\n        </div>\n      </footer>\n    )}\n  />\n)\n\nexport default Footer\n","import React from 'react'\n\nimport './style.scss'\nimport Helmet from './helmet'\nimport Header from './header'\nimport Midsection from './midsection'\nimport Footer from './footer'\n\nconst Layout = ({ children }) => (\n  <div>\n    <Helmet />\n    <Header />\n    <Midsection />\n    <Footer />\n  </div>\n)\n\nexport default Layout\n"],"sourceRoot":""}